version: '3.9'
services:
  data_scrape:
    image: ${AWS_ECR}/data_scrape_pipeline
    build:
      context: ./
      dockerfile: ./containers/data_scrape/Dockerfile
    volumes:
      # Bind mount: it copies local changes made in /data_scrape to container /data_scrape
      - ./services/data_scrape:/var/task:ro # local path/to/app : container path/to/app ready only
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_PASSWORD=${REDDIT_PASSWORD}
      - REDDIT_USERNAME=${REDDIT_USERNAME}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
  data_prep:
    image: ${AWS_ECR}/data_prep_pipeline
    build:
      context: ./
      dockerfile: ./containers/data_prep/Dockerfile
    volumes:
      - ./services/data_prep:/var/task:ro 
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - WAREHOUSE_DB=${WAREHOUSE_DB}
      - WAREHOUSE_USER=${WAREHOUSE_USER}
      - WAREHOUSE_PASSWORD=${WAREHOUSE_PASSWORD}
      - WAREHOUSE_HOST=${WAREHOUSE_HOST}
      - WAREHOUSE_PORT=${WAREHOUSE_PORT}
  ml_predict:
    image: ${AWS_ECR}/ml_predict
    build:
      context: ./
      dockerfile: ./containers/ml_predict/Dockerfile
    volumes:
      - ./services/ml_predict:/var/task:ro 
    environment:
      - WAREHOUSE_DB=${WAREHOUSE_DB}
      - WAREHOUSE_USER=${WAREHOUSE_USER}
      - WAREHOUSE_PASSWORD=${WAREHOUSE_PASSWORD}
      - WAREHOUSE_HOST=${WAREHOUSE_HOST}
      - WAREHOUSE_PORT=${WAREHOUSE_PORT}