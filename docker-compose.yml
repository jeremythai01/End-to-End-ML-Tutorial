version: '3.9'
services:
  warehouse:
      image: postgres:12.8
      container_name: warehouse_container
      environment:
        - POSTGRES_USER=${WAREHOUSE_USER}
        - POSTGRES_PASSWORD=${WAREHOUSE_PASSWORD}
        - POSTGRES_DB=${WAREHOUSE_DB}
      volumes:
        - ./docker_containers/warehouse:/docker-entrypoint-initdb.d
      healthcheck:
        test: ["CMD", "pg_isready", "-d", "${WAREHOUSE_DB}", "-U", "${WAREHOUSE_USER}"]
        interval: 5s
        retries: 5
      restart: always
      ports:
        - "5432:5432"
  data_scrape:
    image: ${AWS_ECR}/data_scrape_pipeline
    build:
      context: ./
      dockerfile: ./containers/data_scrape/Dockerfile
    volumes:
      # Bind mount: it copies local changes made in /data_scrape to container /data_scrape
      - ./services/data_scrape:/var/task:ro # local path/to/app : container path/to/app ready only
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_PASSWORD=${REDDIT_PASSWORD}
      - REDDIT_USERNAME=${REDDIT_USERNAME}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
  data_prep:
    depends_on:
      - warehouse
    image: ${AWS_ECR}/data_prep_pipeline
    build:
      context: ./
      dockerfile: ./containers/data_prep/Dockerfile
    volumes:
      - ./services/data_prep:/var/task:ro 
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - WAREHOUSE_DB=${WAREHOUSE_DB}
      - WAREHOUSE_USER=${WAREHOUSE_USER}
      - WAREHOUSE_PASSWORD=${WAREHOUSE_PASSWORD}
      - WAREHOUSE_HOST=${WAREHOUSE_HOST}
      - WAREHOUSE_PORT=${WAREHOUSE_PORT}